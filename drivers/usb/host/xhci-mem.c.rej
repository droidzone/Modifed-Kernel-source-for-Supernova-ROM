--- drivers/usb/host/xhci-mem.c
+++ drivers/usb/host/xhci-mem.c
@@ -974,19 +974,9 @@
 	interval = clamp_val(ep->desc.bInterval, 1, 16) - 1;
 	if (interval != ep->desc.bInterval - 1)
 		dev_warn(&udev->dev,
-			 "ep %#x - rounding interval to %d %sframes\n",
+			 "ep %#x - rounding interval to %d microframes\n",
 			 ep->desc.bEndpointAddress,
-			 1 << interval,
-			 udev->speed == USB_SPEED_FULL ? "" : "micro");
-
-	if (udev->speed == USB_SPEED_FULL) {
-		/*
-		 * Full speed isoc endpoints specify interval in frames,
-		 * not microframes. We are using microframes everywhere,
-		 * so adjust accordingly.
-		 */
-		interval += 3;	/* 1 frame = 2^3 uframes */
-	}
+			 1 << interval);
 
 	return interval;
 }
@@ -1044,12 +1034,12 @@
 	 * nearest power of 2.
 	 */
 	case USB_SPEED_FULL:
-		if (usb_endpoint_xfer_isoc(&ep->desc)) {
+		if (usb_endpoint_xfer_int(&ep->desc)) {
 			interval = xhci_parse_exponent_interval(udev, ep);
 			break;
 		}
 		/*
-		 * Fall through for interrupt endpoint interval decoding
+		 * Fall through for isochronous endpoint interval decoding
 		 * since it uses the same rules as low speed interrupt
 		 * endpoints.
 		 */
