--- net/sunrpc/sched.c
+++ net/sunrpc/sched.c
@@ -623,25 +623,30 @@
 	BUG_ON(RPC_IS_QUEUED(task));
 
 	for (;;) {
-		void (*do_action)(struct rpc_task *);
 
 		/*
-		 * Execute any pending callback first.
+		 * Execute any pending callback.
 		 */
-		do_action = task->tk_callback;
-		task->tk_callback = NULL;
-		if (do_action == NULL) {
+		if (task->tk_callback) {
+			void (*save_callback)(struct rpc_task *);
+
+			/*
+			 * We set tk_callback to NULL before calling it,
+			 * in case it sets the tk_callback field itself:
+			 */
+			save_callback = task->tk_callback;
+			task->tk_callback = NULL;
+			save_callback(task);
+		} else {
 			/*
 			 * Perform the next FSM step.
-			 * tk_action may be NULL if the task has been killed.
-			 * In particular, note that rpc_killall_tasks may
-			 * do this at any time, so beware when dereferencing.
+			 * tk_action may be NULL when the task has been killed
+			 * by someone else.
 			 */
-			do_action = task->tk_action;
-			if (do_action == NULL)
+			if (task->tk_action == NULL)
 				break;
+			task->tk_action(task);
 		}
-		do_action(task);
 
 		/*
 		 * Lockless check for whether task is sleeping or not.
